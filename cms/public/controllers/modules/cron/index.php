<?php# МОДУЛЬ CRON v.2.0# Coded by ShadoW (c) 2013class cnt_Index extends Controller{	# ИНИЦИАЛИЗАЦИЯ	public function init()	{		# Проверка авторизации		if (!Core::$_data['authed']) Helpers::redirect(_CMS_.'auth');	}	# СПИСОК ЗАДАЧ	public function act_index()	{		# Права доступа		if (Core::$_data['module_access'] != 'rw') View::assign('readonly', true);		$tasks = array();		if ($task_list = Model::$_db->select('md_cron', "ORDER BY `start_date` ASC"))		{			foreach($task_list as $k=>$t)			{				$tasks[$k] 					= $t;				$tasks[$k]['disabled']		= $t['active'] == 0	? true : false;				$tasks[$k]['process']		= $t['run'] == 0 	? false : true;				$tasks[$k]['process_text']	= $t['run'] == 0 	? 'Запустить' : 'Выполняется';				$tasks[$k]['start']			= date('d.m.Y в H:i', $t['start_date']);				$tasks[$k]['run']			= ($t['last_start'] != 0) ? date('d.m.Y в H:i', $t['last_start']) : '<span style="color:red;">не выполнялась</span>';				$tasks[$k]['status']		= $t['active'] == 1 ? 'on' : 'off';				$tasks[$k]['status_text']	= $t['active'] == 1 ? 'Отключить' : 'Включить';			}			unset($task_list, $k, $t);		}		# ВЫВОД		View::assign('%page_title', 'Список задач');		View::render('modules/cron/list', true, array(			'host'	=> str_replace('www.', '', $_SERVER['HTTP_HOST'])._CMS_,			'key'	=> md5('cron_'.str_replace('www.', '', $_SERVER['HTTP_HOST'])),			'tasks'	=> $tasks		));	}	# ДОБАВИТЬ ЗАДАЧУ	public function act_add()	{		# Название страницы		View::assign('%page_title', 'Добавление новой задачи');		# Проверка прав доступа		if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));		# Папка контроллеров		if (is_dir(_ABS_ROOT_.'cron'))		{			# Проверяем наличие контроллеров			if ($controllers = Cron::getControllers())			{				$controllers_list = array();				foreach($controllers as $c)				{					$controllers_list[] = array('name'=>$c, 'set'=>false);				}				View::assign('controllers', $controllers_list);			}			else View::assign('error', 'Контроллеры задач не найдены');		}		else View::assign('error', 'Папка задач <b>'._ABS_CMS_.'cron</b> не найдена');		# ВЫВОД		View::render('modules/cron/add');	}	# РЕДАКТИРОВАТЬ ЗАДАЧУ	public function act_edit()	{		if (isset($this->_params[0]) && ($task_id = filter_var($this->_params[0], FILTER_VALIDATE_INT)) && ($task = Cron::get($task_id)))		{			# Название страниы			View::assign('%page_title', 'Редактирование задачи');			# Проверка прав доступа			if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));			# Проверяем наличие контроллеров			if ($controllers_list = Cron::getControllers())			{				$controllers = array();				foreach($controllers_list as $c)				{					$controllers[] = array(						'name'	=> $c,						'set'	=> $c == $task['controller'] ? true : false					);				}				unset($controllers_list, $c);				# Дата и время				$date_time			= explode(' ', date('d.m.Y H:i', $task['start_date']));				$task['date']		= $date_time[0];				$task['time']		= $date_time[1];				$task['interval']	= ($task['interval'] != 0) ? ($task['interval'] / 60) : '';				# ВЫВОД				View::render('modules/cron/edit', true, array(					'controllers'	=> $controllers,					'task'			=> $task				));			}			else Helpers::redirect(_MODULES_.'cron/');		}		else Helpers::redirect(_MODULES_.'cron/');	}}