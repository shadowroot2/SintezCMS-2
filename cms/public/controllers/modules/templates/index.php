<?php# МОДУЛЬ ШАБЛОНЫ v.3.0# Coded by ShadoW (c) 2013class cnt_Index extends Controller{	private $_upload_error = array();	# ИНИЦИАЛИЗАЦИЯ	public function init()	{		# Проверка авторизации		if (!Core::$_data['authed']) Helpers::redirect(_CMS_);	}	# СПИСОК ШАБЛОНОВ	public function act_index()	{		# Собираем шаблоны		$templates_list = array();		if ($templates_list = Model::getClasses(true))		{			foreach($templates_list as $k=>$t) $templates_list[$k]['count'] = Model::$_db->count('class_'.$t['id'], "GROUP BY `object_id`");		}		# ВЫВОД		View::assign('%page_title', 'Шаблоны');		View::render('modules/templates/list', true, array(			'readonly'	=> Core::$_data['module_access'] != 'rw' ? true : false,			'templates'	=> $templates_list		));	}	# ДОБАВЛЕНИЕ ШАБЛОНА	public function act_add()	{		# Название страницы		View::assign('%page_title', 'Добавление нового шаблона');		# Проверка прав доступа		if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));		# Поля		$fields_form = View::getTemplate('modules/templates/fields', false, array('fields'=>Model::$_tfields));		# ВЫВОД		View::render('modules/templates/add', true, array('fields_form'=>$fields_form));	}	# РЕДАКТИРОВАНИЕ ШАБЛОНА	public function act_edit()	{		if (isset($this->_params[0]) && ($class_id = filter_var($this->_params[0], FILTER_VALIDATE_INT)) && ($class = Model::getClass($class_id)))		{			# Поля			$fields_form = View::getTemplate('modules/templates/fields', false, array('fields'=>Model::$_tfields));			# ВЫВОД			View::assign('%page_title', 'Редактирование шаблона');			View::render('modules/templates/edit', true, array(				'protected'		=> (($class['protected'] == 1) || (Core::$_data['module_access'] != 'rw')) ? true : false,				'fields_form'	=> (($class['protected'] == 0) && (Core::$_data['module_access'] == 'rw')) ? $fields_form : '',				'template'		=> $class			));		}		else Helpers::redirect(_MODULES_.'templates/');	}	# ЭКСПОРТИРОВАТЬ ШАБЛОН	public function act_export()	{		if (isset($this->_params[0]) && ($class_id = filter_var($this->_params[0], FILTER_VALIDATE_INT)) && ($class = Model::getClass($class_id)))		{			header('Content-Type:text/xml;');			header('Content-Disposition: attachment; filename=template_'.mb_strtolower(str_replace(array('"', ' '), array('', '_'), $class['name'])).'.xml');			echo '<?xml version="1.0" encoding="utf-8"?>'._NL_			.'<sintez_template version="1.0">'._NL_			.'	<additional>'.$class['additional'].'</additional>'._NL_			.'	<name>'.$class['name'].'</name>'._NL_			.'	<desc>'.$class['desc'].'</desc>'._NL_			.'	<fields>';			foreach($class['fields'] as $f)			{				echo _NL_				.'		<field>'._NL_				.'			<name>'.$f['name'].'</name>'._NL_				.'			<type>'.$f['type'].'</type>'._NL_				.'			<atribute>'.$f['atribute'].'</atribute>'._NL_				.'		</field>';			}			echo _NL_			.'	</fields>'._NL_			.'</sintez_template>';		}		else Helpers::redirect(_MODULES_.'templates/');	}	# ИМПОРТ ШАБЛОНОВ	public function act_import()	{		# Проверка прав доступа		if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));		# Файл послан		if (isset($_FILES['tfile']) && is_array($_FILES['tfile']) && ($files_count = count($_FILES['tfile']['name'])))		{			# Читаем параметры сервера			$SERVER_POST_MAX_SIZE = ini_get('post_max_size');			$unit				  = strtoupper(substr($SERVER_POST_MAX_SIZE, -1));			$multiplier 		  = ($unit == 'M' ? 1048576 : ($unit == 'K' ? 1024 : ($unit == 'G' ? 1073741824 : 1)));			# Ошибки загрузки			$upload_errors = array(				1 => 'Превышен размер файла upload_max_filesize',				2 => 'Превышен размер файла',				3 => 'Файл загружен не полностью',				4 => 'Файл не передан',				6 => 'Ошибка временной папки'			);			# Проверка размера посланных данных			if (((int)$_SERVER['CONTENT_LENGTH'] > $multiplier*(int)$SERVER_POST_MAX_SIZE) && $SERVER_POST_MAX_SIZE)			{				header("HTTP/1.1 500 Internal Server Error");				exit('Максимальный размер POST '.$SERVER_POST_MAX_SIZE);			}			else			{				# БЕГАЕМ ПО ФАЙЛАМ				for($i=0; $i<$files_count; $i++)				{					# Расширение файла					$file_parts	= explode('.', $_FILES['tfile']['name'][$i]);					$file_ext	= mb_strtolower(end($file_parts));					# Проверяем посланный файл					if ($_FILES['tfile']['error'][$i] != 0)					$this->_upload_error[] = $upload_errors[$_FILES['tfile']["error"][$i]].' #'.$i;					else if ($_FILES['tfile']['name'][$i] == '')			$this->_upload_error[] = 'У файла #'.$i.' нет имени';					else if ($_FILES['tfile']['size'][$i] == 0)				$this->_upload_error[] = 'Файл <b>'.$_FILES['tfile']['name'][$i].'</b> пустой';					else if ($_FILES['tfile']['type'][$i] != 'text/xml')	$this->_upload_error[] = 'Файл <b>'.$_FILES['tfile']['name'][$i].'</b> не является XML';					else if ($file_ext != 'xml')							$this->_upload_error[] = 'Не правильное расширени файла <b>'.$_FILES['tfile']['name'][$i].'</b>';					else					{						# Содержимое файла						if (($xml_obj = simplexml_load_file($_FILES['tfile']['tmp_name'][$i])) && is_object($xml_obj) && ($attr = $xml_obj->attributes()) && ($attr->version == 1))						{							if (isset($xml_obj->name) && isset($xml_obj->desc) && isset($xml_obj->fields) && is_object($xml_obj->fields) && isset($xml_obj->fields->field))							{								# Поля								$fields = array();								foreach($xml_obj->fields->field as $f_obj)								{									if (isset($f_obj->name) && ($f_obj->name != '') && isset($f_obj->type) && ($f_obj->type != '') && isset($f_obj->atribute))									{										if (isset(Model::$_tfields[(string)$f_obj->type]))										{											$fields[] = array(												'name'		=> Helpers::escape((string)$f_obj->name),												'type'		=> Helpers::escape((string)$f_obj->type),												'atribute'	=> Helpers::escape((string)$f_obj->atribute)											);										}										else $this->_upload_error[] = 'Тип поля <b>'.(string)$f_obj->type.'</b> не существует, файл <b>'.$_FILES['tfile']['name'][$i].'</b>';									}								}								# Добавляем шаблон								if (count($fields) && ($class_id = Model::addClass(array(										'additional'	=> isset($xml_obj->additional) ? (int)$xml_obj->additional : 0,										'name'			=> Helpers::escape((string)$xml_obj->name),										'desc'			=> Helpers::escape((string)$xml_obj->desc),									), $fields))								)								{									# Логирование									if (Core::$_log_actions) Logger::add(1, 'Шаблон', (string)$xml_obj->name, 0, $class_id);								}								else $this->_upload_error[] = 'Невозможно создать шаблон <b>'.(string)$xml_obj->name.'</b>, возможно шаблон с таким названием уже существует';							}							else $this->_upload_error[] = 'Не корректный формат файла <b>'.$_FILES['tfile']['name'][$i].'</b>';						}						else $this->_upload_error[] = 'Не возможно прочитать файл <b>'.$_FILES['tfile']['name'][$i].'</b>';					}				}			}			# ИМПОРТ ПРОШЕЛ УСПЕШНО			if (count($this->_upload_error) == 0) Helpers::redirect(_MODULES_.'templates');		}		# ВЫВОД		View::assign('%page_title', 'Импорт шаблонов');		View::render('modules/templates/import', true, array(			'error'	=> count($this->_upload_error) ? join('<br />', $this->_upload_error) : false		));	}}