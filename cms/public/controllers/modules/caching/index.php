<?php# МОДУЛЬ КЭШИРОВАНИЕ v.2.0# Coded by ShadoW (c) 2013class cnt_Index extends Controller{	private $_errors  	= array();	private $_caching 	= true;	private $_memcached = false;	# ИНИЦИАЛИЗАЦИЯ	public function init()	{		# Проверка авторизации		if (!Core::$_data['authed']) Helpers::redirect(_CMS_.'auth');		# Парметры кэширования		if (is_readable(_ABS_ROOT_.'index.php') && ($config_file = fopen(_ABS_ROOT_.'index.php', 'r')))		{			while(!feof($config_file))			{				$line = fgets($config_file, 1024);				if (preg_match('/^.*\'caching\'.*=>.*(true|false).*$/i', $line, $match) && (sizeof($match) == 2))				{					if ($match[1] == 'false') $this->_caching = false;				}				if (preg_match('/^.*\'memcached\'.*=>.*(true|false).*$/i', $line, $match) && (sizeof($match) == 2))				{					if ($match[1] == 'true') $this->_memcached = true;				}			}			fclose($config_file);		}		else $this->_errors[] = '<div>Невозможно прочитать файл настроек <b>'._ABS_ROOT_.'index.php</b></div>';		# Инициализация Memcached		if ($this->_memcached) MemcachedCache::_init();	}	# СОСТОЯНИЕ КЭША	public function act_index()	{		# Кэш-файлы		$cache_dir = _ABS_ROOT_.'public'._SEP_.'cache';		if (is_dir($cache_dir))		{			$cache_dir_size	= $this->dir_size($cache_dir);			if ($cache_dir_size > 0)			{				if ($cache_dir_size >= 1024)				{					if (($cache_dir_size / 1024 / 1024) >= 1024) $cache_dir_size = number_format(ceil($cache_dir_size / 1024 / 1024), 0, '.', ' ').' Мб.';					else $cache_dir_size = number_format(ceil($cache_dir_size / 1024), 0, '.', ' ').' Кб.';				} else $cache_dir_size .= ' байт';			}		}		else $this->_errors[] = '<div>Директория кэша <b>'.$cache_dir.'cache</b> не найдена</div>';		# Изображения		$images_cache_dir = _ABS_UPLOADS_.'resized';		if (is_dir($images_cache_dir))		{			$images_cache_dir_size = $this->dir_size($images_cache_dir);			if ($images_cache_dir_size)			{				if ($images_cache_dir_size >= 1024)				{					if (($images_cache_dir_size / 1024) >= 1024)					{						if (($images_cache_dir_size / 1024 / 1024) >= 1024)  $images_cache_dir_size = number_format(ceil($images_cache_dir_size / 1024 / 1024 / 1024), 0, '.', ' ').' Гб.';						else $images_cache_dir_size = number_format(ceil($images_cache_dir_size / 1024 / 1024), 0, '.', ' ').' Мб.';					}					else $images_cache_dir_size = number_format(ceil($images_cache_dir_size / 1024), 0, '.', ' ').' Кб.';				} else $images_cache_dir_size .= ' байт';			}		}		else $this->_errors[] = '<div>Директория кэша изображений <b>'.$images_cache_dir.'</b> не найдена</div>';		# ВЫВОД		View::assign('%page_title', 'Состояние кэша');		View::render('modules/caching/state', true, array(			'error'				=> count($this->_errors) ? join("\n", $this->_errors) : false,			'caching'			=> $this->_caching,			'memcached'			=> $this->_memcached,			'memcached_version'	=> $this->_memcached ? MemcachedCache::version() : '',			'memcached_stat'	=> $this->_memcached ? MemcachedCache::stat() : '',			'cache_size'		=> !empty($cache_dir_size)			? $cache_dir_size : 0,			'images_cache_size'	=> !empty($images_cache_dir_size)	? $images_cache_dir_size : 0		));	}	# ОЧИСТКА КЭША	public function act_clear()	{		View::assign('%page_title', 'Очистка кэша');		if (isset($this->_params[0]) && ($this->_params[0] == 'yes'))		{			# Memcached			if ($this->_memcached) MemcachedCache::clear();			$this->dir_clear(_ABS_ROOT_.'public'._SEP_.'cache');			$this->dir_clear(_ABS_UPLOADS_.'resized');			# Запрос с фронтэнда			if (Core::isAjax()) exit(Helpers::JSON(array('status'=>'ok')));			View::render('modules/caching/cleared');		}		else View::render('modules/caching/confirm_clear');	}	# РАЗМЕР ДИРЕКТОРИИ	private function dir_size($dir)	{		$dir_size = 0;		if (is_dir($dir))		{			foreach(scandir($dir) as $f)			{				if (!in_array($f, array('.', '..')))				{					if (is_file($dir._SEP_.$f))		$dir_size += filesize($dir._SEP_.$f);					else if (is_dir($dir._SEP_.$f))	$dir_size += $this->dir_size($dir._SEP_.$f);				}			}		}		return intval($dir_size);	}	# ОЧИСТКА ДИРЕКТОРИИ	private function dir_clear($dir)	{		if (is_dir($dir))		{			foreach(scandir($dir) as $f)			{				if (!in_array($f, array('.', '..')))				{					if (is_file($dir._SEP_.$f))		unlink($dir._SEP_.$f);					else if (is_dir($dir._SEP_.$f)) $this->dir_clear($dir._SEP_.$f);				}			}		}		else return false;		return true;	}}