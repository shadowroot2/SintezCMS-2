<?php# МОДУЛЬ ПОЛЬЗОВАТЕЛИ v.2.0# Coded by ShadoW (c) 2013class cnt_Index extends Controller{	# ИНИЦИАЛИЗАЦИЯ	public function init()	{		# Проверка авторизации		if (!Core::$_data['authed']) Helpers::redirect(_CMS_.'auth');	}	# СПИСОК ГРУПП	public function act_index()	{		# Название страницы		View::assign('%page_title', 'Группы пользователей');		# Проверка прав доступа		if (Core::$_data['module_access'] != 'rw') View::assign('readonly', true);		# Получаем группы		if ($groups_list = Model::$_db->select('md_user_groups', "ORDER BY `id` ASC"))		{			foreach($groups_list as $k=>$g)			{				$groups_list[$k]['users']		= Model::$_db->count('md_users', "WHERE `gid`='".$g['id']."'", 'id');				$groups_list[$k]['disabled'] 	= $g['active'] == 1 ? false : true;				$groups_list[$k]['status'] 		= $g['active'] == 1 ? 'on' : 'off';				$groups_list[$k]['status_text'] = $g['active'] == 1 ? 'Включена' : 'Отключена';				unset($groups_list[$k]['active']);				if ($g['access'] == '*') $groups_list[$k]['access'] = '<b class="ok">Полный доступ</b>';				else if (($access = unserialize($g['access'])) && is_array($access))				{					$groups_list[$k]['access'] = '';					foreach ($access as $module=>$params)					{						foreach(Core::$_data['cms_modules'] as $m)						{							if ($m['route'] == $module)							{								$groups_list[$k]['access'] .= '<div><b>'.$m['name'].'</b> (<span style="color:green">чтение</span>'.($params['access'] == 'rw' ? '+<span style="color:red">запись</span>' : '').')</div>';								break;							}						}					}				}				else $groups_list[$k]['access'] = '<span class="error">Ошибка обработки</span>';			}		}		# ВЫВОД		View::render('modules/users/groups_list', true, array('groups'=>$groups_list));	}	# ДОБАВИТЬ ГРУППУ	public function act_gadd()	{		# Название страницы		View::assign('%page_title', 'Добавление группы');		# Проверка прав доступа		if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));		# ВЫВОД		View::render('modules/users/gadd', true, array('modules'=>Core::$_data['cms_modules']));	}	# РЕДАКТИРОВАТЬ ГРУППУ	public function act_gedit()	{		if (isset($this->_params[0]) && ($group_id = filter_var($this->_params[0], FILTER_VALIDATE_INT)) && ($group = Model::$_db->select('md_user_groups', "WHERE `id`='$group_id' AND `protected`='0' LIMIT 1")))		{			# Название страницы			View::assign('%page_title', 'Редактирование группы');			# Проверка прав доступа			if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));			# Доступы			$access = unserialize($group['access']);			$group['access'] = array();			foreach($access as $module=>$params)			{				foreach(Core::$_data['cms_modules'] as $m)				{					if ($m['route'] == $module)					{						$group['access'][] = array(							'module'		=> $module,							'module_name'	=> $m['name'],							'access'		=> $params['access'],							'access_name'	=> $params['access'] == 'rw' ? 'чтение+запись' : 'чтение',							'params'		=> $params['params']						);						break;					}				}			}			unset($access);			View::render('modules/users/gedit', TRUE, array(				'modules' 	=> Core::$_data['cms_modules'],				'group'		=> $group,			));		}		else Helpers::redirect(_MODULES_.'users/');	}	# СПИСОК ПОЛЬЗОВАТЕЛЕЙ ГРУППЫ	public function act_gusers()	{		# Права доступа		if (Core::$_data['module_access'] != 'rw') View::assign('readonly', true);		# Проверяем параметры		if (isset($this->_params[0]) && ($group_id = filter_var($this->_params[0], FILTER_VALIDATE_INT)) && ($group = Model::$_db->select('md_user_groups', "WHERE `id`='$group_id' LIMIT 1")))		{			# Пользователи			$users = array();			if ($users_list = Model::$_db->select('md_users', "WHERE `gid`='$group_id' ORDER BY `id` ASC", "`id`, `active`, `protected`, `name`, `login`, `add_ts`, `login_ts`"))			{				foreach($users_list as $u)				{					$users[] = array(						'id'			=> $u['id'],						'protected'		=> $u['protected'],						'disabled' 		=> $u['active'] == 1 ? false : true,						'status'		=> $u['active'] == 1 ? 'on' : 'off',						'status_text'	=> $u['active'] == 1 ? 'Включен' : 'Отключен',						'name'			=> $u['name'],						'login'			=> $u['login'],						'add_date'		=> date('d.m.Y H:i', $u['add_ts']),						'login_date'	=> ($u['login_ts'] != 0) ? date('d.m.Y H:i', $u['login_ts']) : '<span class="error">не входил</span>'					);				}				unset($users_list, $u);			}			# ВЫВОД			View::assign('%page_title', 'Пользователи группы &laquo;'.$group['name'].'&raquo;');			View::render('modules/users/users_list', true, array('group_id'=>$group_id, 'users'=>$users));		}		else Helpers::redirect(_MODULES_.'users');	}	# ДОБАВИТЬ ПОЛЬЗОВАТЕЛЯ	public function act_uadd()	{		# Название страницы		View::assign('%page_title', 'Добавление пользователя');		# Проверка прав доступа		if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));		# Группы		$groups = $this->getGroups(((isset($this->_params[0]) && filter_var($this->_params[0], FILTER_VALIDATE_INT)) ?  $this->_params[0] : false));		# ВЫВОД		View::render('modules/users/uadd', true, array('groups'=>$groups));	}	# РЕДАКТИРОВАТЬ ПОЛЬЗОВАТЕЛЯ	public function act_uedit()	{		if (isset($this->_params[0]) && ($user_id = filter_var($this->_params[0], FILTER_VALIDATE_INT)) && ($user = Model::$_db->select('md_users', "WHERE `id`='$user_id' AND `protected`='0' LIMIT 1")))		{			# Назваение страницы			View::assign('%page_title', 'Редактирование пользователя');			# Проверка прав доступа			if (Core::$_data['module_access'] != 'rw') exit(View::render('access_denied'));			# ВЫВОД			View::render('modules/users/uedit', true, array(				'groups' => $this->getGroups($user['gid']),				'user'	 => $user			));		}		else Helpers::redirect(_MODULES_.'users/');	}	# ПОЛУЧЕНИЕ ГРУПП	private function getGroups($group_id=false)	{		$groups = array();		if ($groups_list = Model::$_db->select('md_user_groups', "ORDER BY `id` ASC", "`id`, `name`"))		{			foreach($groups_list as $k=>$g)			{				$groups[$k] = $g;				$groups[$k]['set'] = (is_numeric($group_id) && ($g['id'] == $group_id)) ? true : false;			}		}		return $groups;	}}